function sleeptape1_gen() {
	s=[]
	s[0]="2 4 2 7 6 6 3 5"
	s[1]="1 3 2 1 3 2 2 4"
	s[2]="1 6 2 3 7 1 7 6"
	s[3]="0 5 1 1 7 1 3 2"
	s[4]="1 6 5 4 4 1 7 3"
	s[5]="0 5 2 6 1 6 1 6"
	s[6]="0 0 3 1 1 7 1 7"
	s[7]="2 5 7 7 7 7 7 3"
	s[8]="1 6 6 4 4 5 3 4"
	s[9]="1 7 1 7 4 4 2 3"
	s[10]="1 3 7 5 3 2 4 6"
	s[11]="1 2 7 7 5 6 1 4"
	s[12]="3 3 3 4 6 7 3 6"
	s[13]="2 2 2 4 6 7 4 6"
	s[14]="2 2 3 3 6 4 6 7"
	s[15]="2 3 7 7 4 3 2 7"
	s[16]="0 3 0 3 4 0 7 2"
	s[17]="0 3 5 7 3 1 5 1"
	s[18]="0 2 4 6 3 4 6 7"
	s[19]="1 1 7 5 4 5 2 3"
	s[20]="2 5 6 7 2 7 7 7"
	s[21]="0 1 6 7 1 3 5 4"
	s[22]="0 1 1 7 7 1 3 2"
	s[23]="0 3 3 4 7 6 2 3"
	s[24]="3 3 3 4 3 5 7 4"
	s[25]="0 3 3 3 6 4 0 4"
	s[26]="0 1 1 3 7 4 5 6"
	s[27]="1 1 7 2 1 4 2 4"
	s[28]="2 4 6 2 7 6 2 5"
	s[29]="1 5 3 3 1 6 5 5"
	s[30]="0 7 1 4 5 5 3 2"
	s[31]="0 1 2 1 7 7 6 2"
	s[32]="0 1 2 6 2 6 6 6"
	s[33]="0 4 5 5 7 6 6 2"
	s[34]="0 0 1 1 1 6 0 5"
	s[35]="0 4 1 6 7 2 0 7"
	s[36]="0 2 7 4 1 0 7 6"
	s[37]="0 5 5 1 3 4 5 7"
	s[38]="0 6 3 6 1 5 7 1"
	s[39]="0 2 6 1 7 5 1 3"
	s[40]="0 4 6 1 3 0 5 6"
	s[41]="1 1 1 2 7 1 5 4"
	s[42]="2 6 3 6 7 6 3 4"
	s[43]="0 3 7 6 4 4 3 4"
	s[44]="0 5 2 5 3 4 5 3"
	s[45]="1 2 5 7 6 3 2 7"
	s[46]="0 6 5 7 0 7 7 4"
	s[47]="3 3 6 4 4 4 6 4"
	s[48]="1 3 1 4 1 3 1 4"
	s[49]="0 6 5 6 7 7 7 7"
	s[50]="0 0 2 7 1 0 1 7"
	s[51]="1 5 1 6 7 5 7 3"
	s[52]="1 1 2 4 3 2 1 2"
	s[53]="1 4 5 4 6 3 3 4"
	s[54]="0 1 1 4 2 6 2 4"
	s[55]="0 4 3 4 3 2 2 7"
	s[56]="0 6 7 1 4 4 4 1"
	s[57]="0 1 6 7 5 4 7 6"
	s[58]="0 1 4 0 4 7 5 5"
	s[59]="1 3 4 7 3 4 6 5"
	s[60]="0 5 5 2 5 1 6 7"
	s[61]="0 1 5 5 6 3 5 2"
	s[62]="0 0 3 4 4 2 4 7"
	s[63]="1 2 4 3 7 2 4 7"
	s[64]="0 6 5 6 6 2 7 7"
	s[65]="1 2 1 4 4 4 3 3"
	s[66]="1 4 5 2 5 6 4 7"
	s[67]="2 7 3 6 7 3 6 7"
	s[68]="1 3 3 1 7 6 1 6"
	s[69]="0 2 1 7 1 5 1 5"
	s[70]="0 3 3 4 5 7 6 5"
	s[71]="0 6 5 3 2 7 6 3"
	s[72]="0 1 1 4 1 3 2 7"
	s[73]="0 3 4 6 5 4 6 5"
	s[74]="0 0 2 3 6 0 5 4"
	s[75]="1 1 2 7 5 7 1 2"
	s[76]="0 3 2 7 6 5 2 1"
	s[77]="3 5 7 6 5 5 5 4"
	s[78]="2 2 5 2 4 2 4 3"
	s[79]="2 7 5 2 7 6 6 6"
	s[80]="1 5 2 6 1 5 3 2"
	s[81]="0 5 1 0 6 2 6 7"
	s[82]="0 0 2 5 5 2 4 7"
	s[83]="1 5 7 2 4 7 5 3"
	s[84]="2 3 5 5 3 2 5 6"
	s[85]="1 4 3 2 6 5 4 3"
	s[86]="1 5 3 3 5 2 6 2"
	s[87]="0 0 5 3 7 1 7 4"
	s[88]="0 2 5 7 3 6 1 3"
	s[89]="0 3 4 3 2 5 6 2"
	s[90]="0 2 7 6 1 2 4 1"
	s[91]="0 0 6 0 1 3 2 5"
	s[92]="1 2 5 3 5 4 3 2"
	s[93]="1 3 2 6 5 2 5 3"
	s[94]="0 0 0 4 4 3 2 1"
	s[95]="0 7 3 5 4 5 7 5"
	s[96]="3 6 7 5 4 4 5 4"
	s[97]="0 6 6 4 7 2 4 2"
	s[98]="2 2 4 5 3 3 2 4"
	s[99]="0 2 4 3 5 6 7 4"
	s[100]="0 0 3 3 0 4 5 2"
	s[101]="1 3 3 4 7 2 7 2"
	s[102]="0 7 7 1 2 2 2 6"
	s[103]="0 2 2 3 4 5 4 2"
	s[104]="2 2 4 5 5 5 5 4"
	s[105]="2 4 2 5 6 3 3 6"
	s[106]="0 4 0 7 6 2 7 7"
	s[107]="0 2 0 5 3 2 6 1"
	s[108]="0 5 7 1 2 6 6 6"
	s[109]="0 3 2 7 1 1 3 7"
	s[110]="0 0 6 7 6 1 2 7"
	s[111]="0 0 5 0 7 5 7 4"
	s[112]="0 0 1 2 2 3 6 1"
	s[113]="1 3 2 3 2 4 6 5"
	s[114]="0 5 3 1 4 3 3 3"
	s[115]="0 1 3 2 5 7 4 3"
	s[116]="0 1 5 3 3 6 5 2"
	s[117]="1 5 3 2 2 7 2 5"
	s[118]="1 1 1 1 2 1 3 7"
	s[119]="1 2 6 1 7 3 3 7"
	s[120]="1 5 5 2 5 5 5 7"
	s[121]="0 7 2 2 6 5 4 7"
	s[122]="0 5 7 5 1 3 1 6"
	s[123]="0 3 3 7 2 4 3 1"
	s[124]="0 5 6 3 3 0 7 1"
	s[125]="1 2 5 7 2 4 4 5"
	s[126]="0 1 1 0 2 5 4 1"
	s[127]="1 7 6 4 4 3 4 2"
	s[128]="2 5 6 7 7 7 6 3"
	s[129]="2 6 5 5 6 3 4 5"
	s[130]="0 6 2 7 1 7 7 2"
	s[131]="0 3 1 1 7 4 4 7"
	s[132]="0 4 7 5 7 2 7 7"
	s[133]="0 1 5 5 3 6 3 6"
	s[134]="0 0 2 6 3 0 3 7"
	s[135]="1 3 3 6 4 3 5 2"
	s[136]="3 5 5 3 6 7 7 6"
	s[137]="0 2 3 3 5 6 6 3"
	s[138]="3 5 3 5 5 3 5 7"
	s[139]="0 2 1 7 1 0 5 1"
	s[140]="0 3 4 1 5 4 1 7"
	s[141]="1 2 2 5 4 1 7 3"
	s[142]="0 6 3 6 1 5 6 4"
	s[143]="0 5 6 5 5 3 3 3"
	s[144]="1 5 4 7 4 5 7 2"
	s[145]="0 2 6 7 4 6 3 6"
	s[146]="0 2 6 6 4 5 3 1"
	s[147]="0 2 5 1 1 5 4 1"
	s[148]="0 5 4 1 7 0 5 7"
	s[149]="1 2 4 2 2 6 1 4"
	s[150]="1 7 7 6 4 7 4 6"
	s[151]="0 6 5 4 2 6 7 3"
	s[152]="1 1 2 5 5 7 1 7"
	s[153]="1 7 2 3 7 4 2 3"
	s[154]="0 2 1 5 3 6 0 3"
	s[155]="0 1 6 6 4 2 4 7"
	s[156]="2 6 6 7 6 3 4 7"
	s[157]="0 6 3 1 3 7 4 4"
	s[158]="0 4 6 6 1 4 3 6"
	s[159]="1 3 6 1 4 5 1 7"
	s[160]="2 7 6 4 7 6 3 6"
	s[161]="0 2 2 5 4 5 5 7"
	s[162]="1 5 3 4 1 7 7 2"
	s[163]="0 0 7 1 4 2 4 6"
	s[164]="0 3 5 5 4 5 7 5"
	s[165]="0 7 2 3 2 3 1 7"
	s[166]="0 1 3 2 0 7 5 3"
	s[167]="1 7 7 2 5 3 6 5"
	s[168]="2 3 7 5 6 7 3 4"
	s[169]="0 7 2 4 2 5 1 7"
	s[170]="0 0 6 2 5 2 7 1"
	s[171]="0 2 4 6 4 2 5 6"
	s[172]="0 1 5 3 3 3 5 3"
	s[173]="0 6 5 6 6 5 7 3"
	s[174]="0 7 6 1 7 4 1 1"
	s[175]="0 3 1 4 0 7 1 3"
	s[176]="0 5 0 6 4 3 2 2"
	s[177]="0 2 5 2 7 0 3 2"
	s[178]="1 1 7 5 4 1 7 3"
	s[179]="1 4 1 6 3 6 5 3"
	s[180]="0 1 0 5 0 6 7 4"
	s[181]="0 6 2 5 7 2 6 3"
	s[182]="0 6 1 1 2 5 5 5"
	s[183]="0 2 2 3 3 6 6 3"
	s[184]="1 5 4 6 6 5 5 2"
	s[185]="0 5 1 1 5 5 5 4"
	s[186]="0 2 4 6 4 5 7 5"
	s[187]="0 2 6 7 2 0 5 2"
	s[188]="0 6 7 5 1 7 1 4"
	s[189]="0 5 2 3 2 6 6 1"
	s[190]="0 7 3 3 1 5 1 4"
	s[191]="0 4 5 5 6 3 3 5"
	s[192]="1 2 3 2 2 7 2 4"
	s[193]="0 3 3 7 3 2 5 2"
	s[194]="0 1 7 2 2 4 0 4"
	s[195]="0 2 3 2 2 4 3 5"
	s[196]="0 5 6 5 3 5 3 4"
	s[197]="0 3 3 6 1 2 2 3"
	s[198]="0 0 4 6 1 3 4 3"
	s[199]="0 6 5 7 4 1 5 7"
	s[200]="0 1 7 3 3 3 5 1"
	s[201]="0 4 5 5 7 2 4 5"
	s[202]="1 6 6 4 5 2 2 7"
	s[203]="1 3 1 3 4 6 7 7"
	s[204]="1 4 2 5 5 1 5 2"
	s[205]="1 2 2 2 4 2 1 6"
	s[206]="1 3 3 5 6 1 5 6"
	s[207]="0 1 0 7 1 5 6 7"
	s[208]="1 6 2 5 3 5 3 3"
	s[209]="0 2 5 3 2 2 2 4"
	s[210]="0 2 5 7 1 2 3 2"
	s[211]="0 6 5 2 7 7 3 6"
	s[212]="0 4 2 3 6 2 7 7"
	s[213]="0 2 7 5 1 5 5 6"
	s[214]="0 2 6 7 2 7 7 4"
	s[215]="0 7 5 7 7 2 4 5"
	s[216]="0 5 7 6 3 6 2 1"
	s[217]="0 4 6 4 5 3 7 3"
	s[218]="0 4 7 3 0 7 6 7"
	s[219]="1 1 2 4 7 1 4 6"
	s[220]="0 5 2 5 5 1 7 5"
	s[221]="1 2 2 3 3 6 5 4"
	s[222]="2 7 6 6 6 5 4 5"
	s[223]="0 6 2 7 2 7 7 6"
	s[224]="0 2 5 0 4 0 5 3"
	s[225]="0 0 1 5 3 3 3 4"
	s[226]="1 7 3 7 3 6 4 2"
	s[227]="0 5 2 2 7 5 3 3"
	s[228]="0 0 5 2 5 5 5 7"
	s[229]="0 6 2 6 1 7 5 6"
	s[230]="1 1 4 3 1 2 4 4"
	s[231]="0 3 4 4 6 1 4 4"
	s[232]="1 5 7 4 4 3 3 4"
	s[233]="0 2 4 2 3 3 7 2"
	s[234]="0 1 6 0 6 1 3 7"
	s[235]="1 2 2 1 3 4 2 3"
	s[236]="0 7 5 4 4 4 2 5"
	s[237]="0 3 7 3 5 0 7 4"
	s[238]="2 4 7 3 4 3 6 7"
	s[239]="1 2 3 2 2 7 2 7"
	s[240]="1 2 5 5 6 4 5 4"
	s[241]="1 6 4 3 2 5 7 6"
	s[242]="1 6 5 3 1 6 7 4"
	s[243]="1 4 5 4 3 7 2 5"
	s[244]="0 3 2 5 2 2 4 3"
	s[245]="0 2 7 5 1 3 6 3"
	s[246]="0 6 6 2 5 6 6 3"
	s[247]="1 6 2 5 4 3 7 3"
	s[248]="0 5 4 4 4 4 5 7"
	s[249]="1 5 7 5 4 2 7 7"
	s[250]="0 1 7 4 6 0 6 5"
	s[251]="0 1 0 7 3 0 1 2"
	s[252]="0 5 5 6 3 3 7 2"
	s[253]="0 7 5 1 5 3 4 4"
	s[254]="0 0 2 5 6 3 2 4"
	s[255]="0 2 3 2 0 3 5 2"
	s[256]="0 0 2 5 1 7 1 3"
	s[257]="1 5 6 4 2 5 3 3"
	s[258]="0 1 4 4 5 1 1 1"
	s[259]="1 7 3 6 6 2 6 4"
	s[260]="2 4 3 2 7 4 6 3"
	s[261]="0 0 7 5 6 6 4 7"
	s[262]="1 7 2 7 4 2 4 5"
	s[263]="1 4 3 6 6 6 6 4"
	s[264]="2 3 5 2 4 5 5 3"
	s[265]="1 5 7 7 6 2 7 4"
	s[266]="0 6 7 5 4 7 4 1"
	s[267]="0 6 5 6 6 3 6 1"
	s[268]="0 6 1 4 5 7 1 3"
	s[269]="0 0 7 1 1 6 5 3"
	s[270]="1 7 6 7 3 6 5 7"
	s[271]="0 2 3 0 5 5 7 2"
	s[272]="0 1 3 3 4 2 0 4"
	s[273]="0 3 5 0 7 0 3 7"
	s[274]="0 0 2 4 6 3 5 2"
	s[275]="0 4 3 1 2 6 5 7"
	s[276]="0 6 5 7 1 3 2 7"
	s[277]="1 1 2 2 1 3 1 2"
	s[278]="1 4 7 1 7 7 4 2"
	s[279]="0 0 6 5 4 5 1 6"
	s[280]="0 1 3 7 4 1 7 2"
	s[281]="0 0 5 7 1 7 0 7"
	s[282]="0 1 1 6 2 3 6 5"
	s[283]="0 0 3 5 6 6 2 2"
	s[284]="0 0 7 7 7 5 3 5"
	s[285]="1 3 5 2 4 7 2 3"
	s[286]="0 5 2 3 2 4 1 4"
	s[287]="0 2 4 7 6 6 6 7"
	s[288]="0 0 5 1 6 5 6 5"
	s[289]="0 1 5 3 7 1 7 7"
	s[290]="0 6 6 4 1 7 1 6"
	s[291]="2 6 6 7 4 4 6 3"
	s[292]="1 1 4 3 7 6 5 4"
	s[293]="0 1 7 2 5 2 1 6"
	s[294]="0 7 1 6 6 1 6 4"
	s[295]="1 7 7 4 3 3 4 5"
	s[296]="0 7 4 1 3 4 5 5"
	s[297]="2 3 5 7 4 7 2 4"
	s[298]="0 1 2 3 6 3 1 6"
	s[299]="0 7 1 6 4 7 6 1"
	s[300]="0 6 3 4 3 1 1 5"
	s[301]="1 3 7 5 4 5 4 5"
	s[302]="2 6 3 3 2 6 5 3"
	s[303]="1 1 7 6 1 2 3 3"
	s[304]="1 6 2 2 5 4 7 5"
	s[305]="0 4 7 6 2 7 1 3"
	s[306]="1 2 7 1 3 6 3 5"
	s[307]="0 2 4 6 1 3 6 1"
	s[308]="0 5 4 2 3 7 1 6"
	s[309]="0 2 2 2 2 6 1 7"
	s[310]="1 3 3 7 7 6 6 4"
	s[311]="0 6 7 7 6 6 3 4"
	s[312]="0 7 4 7 5 7 7 2"
	s[313]="0 4 2 5 1 2 2 1"
	s[314]="0 4 4 3 5 2 4 5"
	s[315]="0 0 3 1 6 6 6 1"
	s[316]="0 4 4 4 4 5 1 6"
	s[317]="1 4 5 2 7 2 4 2"
	s[318]="2 6 3 7 5 6 6 7"
	s[319]="0 4 0 5 1 1 6 7"
	s[320]="0 2 1 3 7 4 0 6"
	s[321]="1 1 7 2 3 4 6 4"
	s[322]="0 7 0 7 6 1 7 3"
	s[323]="1 3 1 7 2 7 7 5"
	s[324]="2 4 4 4 3 7 7 4"
	s[325]="0 4 5 5 3 6 4 3"
	s[326]="0 5 2 3 4 3 4 5"
	s[327]="0 1 0 4 0 6 5 5"
	s[328]="1 2 5 2 2 3 2 3"
	s[329]="1 2 7 7 6 3 5 5"
	s[330]="3 7 6 7 4 5 6 4"
	s[331]="0 6 1 3 1 1 4 3"
	s[332]="1 6 6 6 3 2 6 2"
	s[333]="1 2 1 5 2 5 6 3"
	s[334]="1 2 6 7 4 2 6 7"
	s[335]="0 0 4 2 4 6 4 7"
	s[336]="0 5 5 0 6 5 2 5"
	s[337]="1 6 4 7 2 7 3 6"
	s[338]="2 2 3 4 5 4 5 6"
	s[339]="0 3 4 4 4 3 0 4"
	s[340]="1 2 6 7 7 3 5 3"
	s[341]="0 1 7 4 2 2 2 7"
	s[342]="0 4 2 0 5 6 2 5"
	s[343]="1 5 3 5 3 2 4 2"
	s[344]="0 7 1 6 3 4 4 7"
	s[345]="0 0 0 0 2 6 6 5"
	s[346]="0 5 1 0 6 1 4 2"
	s[347]="1 4 6 7 4 5 2 4"
	s[348]="0 4 6 0 7 6 1 5"
	s[349]="1 2 4 7 2 6 5 7"
	s[350]="1 4 2 6 4 4 5 7"
	s[351]="2 2 5 4 2 5 5 3"
	s[352]="0 1 6 5 3 6 5 1"
	s[353]="0 0 3 2 5 0 2 7"
	s[354]="0 3 1 2 4 1 1 4"
	s[355]="0 2 0 2 6 4 1 7"
	s[356]="0 7 0 7 4 3 1 7"
	s[357]="1 1 6 2 7 7 1 5"
	s[358]="0 0 7 1 6 2 6 1"
	s[359]="0 5 7 0 7 4 5 7"
	s[360]="0 1 4 0 6 3 7 7"
	s[361]="0 2 4 6 0 2 6 3"
	s[362]="0 2 1 1 7 6 7 7"
	s[363]="1 5 3 5 1 6 1 7"
	s[364]="2 7 5 7 3 5 4 6"
	s[365]="0 1 1 2 6 3 5 4"
	s[366]="1 4 5 3 3 5 7 3"
	s[367]="0 3 4 3 7 5 4 2"
	s[368]="0 1 2 5 3 1 7 3"
	s[369]="0 0 5 7 7 1 2 4"
	s[370]="0 7 4 6 7 6 2 6"
	s[371]="0 7 4 6 5 7 2 4"
	s[372]="0 0 3 2 0 2 3 1"
	s[373]="0 4 3 3 2 0 6 3"
	s[374]="2 7 7 7 6 6 3 5"
	s[375]="0 0 7 0 6 6 7 4"
	s[376]="1 3 7 7 1 7 4 2"
	s[377]="0 4 4 7 0 6 5 3"
	s[378]="3 7 3 7 5 7 7 7"
	s[379]="0 4 4 2 4 5 1 5"
	s[380]="0 6 7 6 3 1 4 6"
	s[381]="0 0 6 0 1 3 3 6"
	s[382]="0 2 7 7 1 3 0 3"
	s[383]="2 2 2 3 3 2 2 3"
	s[384]="0 5 3 6 7 5 3 4"
	s[385]="0 1 2 7 0 5 7 5"
	s[386]="0 1 3 1 4 1 5 6"
	s[387]="1 2 1 5 5 2 6 7"
	s[388]="1 3 3 4 5 4 3 7"
	s[389]="0 0 0 1 4 3 3 5"
	s[390]="0 3 6 4 7 7 1 2"
	s[391]="2 6 4 6 4 5 4 6"
	s[392]="2 3 5 7 7 2 7 3"
	s[393]="0 3 6 2 2 7 3 2"
	s[394]="0 0 0 3 7 2 6 5"
	s[395]="0 4 6 3 0 4 6 4"
	s[396]="0 1 0 7 1 6 1 6"
	s[397]="0 3 0 5 7 3 5 5"
	s[398]="0 1 1 6 7 2 1 1"
	s[399]="0 2 5 0 5 7 5 3"
	s[400]="0 2 5 2 3 3 4 1"
	s[401]="0 5 5 3 5 2 6 7"
	s[402]="0 2 7 5 4 7 3 3"
	s[403]="1 1 3 3 3 3 1 3"
	s[404]="0 0 4 0 1 4 0 1"
	s[405]="0 5 2 4 5 3 3 4"
	s[406]="0 5 5 2 6 7 7 3"
	s[407]="0 4 1 3 0 5 6 4"
	s[408]="1 2 2 7 5 7 4 2"
	s[409]="2 6 6 7 5 3 7 7"
	s[410]="0 6 0 6 6 5 4 6"
	s[411]="1 4 5 7 1 7 7 3"
	s[412]="1 3 5 6 6 6 3 5"
	s[413]="0 2 3 7 1 2 7 3"
	s[414]="0 3 1 6 5 1 4 7"
	s[415]="0 0 0 6 6 0 0 6"
	s[416]="1 2 6 2 5 3 6 4"
	s[417]="0 7 7 1 1 5 7 4"
	s[418]="2 3 7 3 7 2 4 5"
	s[419]="1 3 4 1 3 7 4 7"
	s[420]="0 3 5 1 7 1 5 6"
	s[421]="0 5 4 7 1 0 7 4"
	s[422]="1 5 4 7 6 7 4 7"
	s[423]="0 1 4 1 1 0 2 3"
	s[424]="0 4 5 5 4 7 1 4"
	s[425]="1 2 3 2 7 3 5 3"
	s[426]="0 3 5 3 5 7 2 4"
	s[427]="0 4 6 6 3 4 2 2"
	s[428]="0 7 1 6 4 1 6 1"
	s[429]="0 4 2 2 1 1 2 7"
	s[430]="0 7 2 6 7 4 1 6"
	s[431]="0 7 4 4 7 3 6 4"
	s[432]="3 4 7 4 6 3 6 5"
	s[433]="0 3 6 7 7 2 1 5"
	s[434]="0 4 4 3 5 3 2 7"
	s[435]="0 2 1 5 0 6 3 3"
	s[436]="0 6 5 6 5 6 5 6"
	s[437]="1 6 2 3 2 5 6 3"
	s[438]="1 1 6 2 5 4 3 2"
	s[439]="0 1 1 2 1 0 4 7"
	s[440]="0 2 5 5 4 7 1 3"
	s[441]="1 5 4 2 5 4 3 7"
	s[442]="0 0 1 6 0 6 4 4"
	s[443]="0 3 0 5 5 5 0 5"
	s[444]="3 5 5 4 6 3 6 4"
	s[445]="0 2 5 1 5 4 3 1"
	s[446]="0 3 2 6 2 3 5 6"
	s[447]="1 1 3 5 7 4 3 2"
	s[448]="0 5 5 6 5 7 6 4"
	s[449]="0 5 1 6 0 6 6 6"
	s[450]="0 6 5 4 4 2 2 2"
	s[451]="0 4 2 7 1 1 1 1"
	s[452]="1 4 6 6 7 4 6 2"
	s[453]="1 1 3 2 5 5 5 2"
	s[454]="0 3 1 6 7 6 2 3"
	s[455]="0 5 1 4 4 1 3 3"
	s[456]="1 3 4 3 2 5 5 7"
	s[457]="1 1 5 2 3 3 5 5"
	s[458]="0 5 6 5 3 6 7 4"
	s[459]="1 1 2 6 4 4 2 7"
	s[460]="2 4 4 5 3 6 7 5"
	s[461]="0 7 7 4 2 7 1 3"
	s[462]="0 3 5 2 4 7 2 1"
	s[463]="0 1 7 7 1 2 6 2"
	s[464]="0 2 7 2 6 2 1 4"
	s[465]="0 1 2 7 1 2 0 3"
	s[466]="0 5 1 5 6 2 7 5"
	s[467]="2 2 6 6 2 5 3 3"
	s[468]="0 7 7 1 6 7 6 7"
	s[469]="2 4 2 5 7 3 4 3"
	s[470]="0 4 3 5 6 7 3 3"
	s[471]="0 4 6 6 4 5 4 1"
	s[472]="0 3 6 7 1 7 6 6"
	s[473]="1 1 4 4 6 4 2 6"
	s[474]="1 3 4 7 2 5 1 6"
	s[475]="0 7 5 6 1 4 4 7"
	s[476]="0 1 6 3 3 4 1 1"
	s[477]="1 3 4 2 4 3 2 2"
	s[478]="0 1 0 5 2 1 1 5"
	s[479]="0 0 2 7 4 6 1 5"
	s[480]="0 0 3 3 7 2 2 1"
	s[481]="0 1 3 2 5 6 5 5"
	s[482]="0 6 1 3 1 2 1 7"
	s[483]="0 0 3 5 7 1 6 4"
	s[484]="0 3 6 5 3 7 3 7"
	s[485]="0 2 5 1 4 4 6 5"
	s[486]="1 3 4 3 6 6 4 4"
	s[487]="0 5 2 0 5 5 4 3"
	s[488]="0 7 5 6 7 1 7 4"
	s[489]="1 2 3 3 6 7 2 4"
	s[490]="2 7 5 6 4 3 5 5"
	s[491]="0 6 2 5 6 4 5 7"
	s[492]="0 3 1 3 1 5 7 3"
	s[493]="0 1 1 5 5 0 5 1"
	s[494]="0 7 2 5 2 1 3 1"
	
	for(i=0;i<495;i++){s[i] = string_to_intseq(s[i])}
	initBinGlobals(8)
    scls = seq("04-43.06","04-16.05", "04-40.00", "04-39.09", "04-12.05", "04-37.10", "04-28.10", "04-28.01")
    rh = seq("D6 00", "C4 60", "52 30", "C9 80", "C4 60", "64 C0", "32 60", "52 30")
    o = ''|bpm2(33)


	for(i=0; i<495; i++) {
	 t=[]
	 for(j=0;j<8;j++) {
	   t[j] = s[(i+495-j)%495]
	 }

	 scl = new scale(join(seqi(scls, t[0])," "),0 ,4);
	 rh1 = join(seqi(rh, t[1])," ")
	 rh2 = join(seqi(rh, t[2])," ")
	 rha = and(rh1, rh2)
	 rho = or(rh1, rh2)
	 rhx = xor(rh1, rh2)

	 u = seqi(t[3], t[4])
	 v = seqi(t[4], t[5])
	 w = seqi(t[5],t[6])
	 x = saddk(u,v)
	 y = saddk(v,w)
	 z1 = mergeseq(4,x,y)
	 z2 = mergeseq(2, revseq(x), flipseq(y))

	 ph11 = scl.gen(saddk(z1,12),1)
	 ph21 = scl.gen(saddk(z2,16),1)
	 ph12 = phns(ph11,8,flipseq(t[7]))
	 ph22 = phns(ph21,8,revseq(t[7]))
	 ph21 = bingate(ph21, "AA AA",1)
	 ph12 = bingate(ph12, "88 88",1)
	 ph31 = bingate(ph22, "08 08",1)
	 ph31 = scadur(ph31,4)
	 ph11 = scadur(legato2(bingate(ph11, rha,1)),0.75)
	 ph21 = scadur(legato2(bingate(ph21, rh1, 1)), 0.5)
	 ph12 = scadur(legato2(bingate(ph12, rh2, 1)), 0.75)

	 ph11.chan = 1
	 ph21.chan = 2
	 ph12.chan = 1
	 ph31.chan = 3
	 inc = dedup(ph11|ph21|ph12|ph31)
	 inc.length=128*Td
	 writemf(inc, "D:/Music making/Projects/Sleep tapes/Sleep tape 1/mid/"+ string(i) + ".mid")
	}
	
}

function sleeptape1_assemble() {

	o=''
	for(i=0;i<495;i++) {
		o+=onlynotes(readmf("D:/Music making/Projects/Sleep tapes/Sleep tape 1/mid/" + string(i) + ".mid"))
	}
	writemf(bpm2(27)|o,"D:/Music making/Projects/Sleep tapes/Sleep tape 1/sleeptape1.mid")

}


function sleeptape2_gen() {
	z0=0
	fs = []
	f1s=seq(0.5,1.0,0.5,1.0)
	f2s=seq(1.0, 2.0,4.0,8.0)
	coeffs=seq(0.03125, 0.0625, 0.125, 0.25)
	
	for(f1 in f1s) {
		for(f2 in f2s) {
			for(coeff in coeffs) {
				fs[z0++] = "Y=T+" + string(coeffs[coeff]) + "*triangle_wform(T*" + string(f1s[f1]) + ")" +"*triangle_wform(T*" + string(f2s[f2]) + ")" 
			}
		}
	}

	for(i=0;i<4;i++) { fs = shuffseq(fs) }

	fsample = open("d:/Music making/Projects/Sleep tapes/sleep tape 2/sample.txt")
	z0=0
	s=[]
	for ( n=1; (v=get(fsample)) != Eof; n++ ) {
		s[z0++] = string_to_intseq(v)
	}
		
	close(fsample)
	
	ch = []
	ch[0] = seq("04-37.09", "04-37.04", "04-27.07", "04-24.05")
	ch[1] = seq("04-37.11", "04-27.02","04-27.09","04-24.00")
	ch[2] = seq("04-19.02","04-36.09","04-16.04","04-36.02")
	ch[3] = seq("04-24.07","04-19.09", "04-36.04","04-42.07")
	
	p4 = gen_permu(4)
	for(i=0;i<4;i++) p4=shuffseq(p4)
	cmb = []
	z0=0
	chans1=seq(2,3,4,5)
	chans2=seq(6,7,8,9)
	for(i in chans1) { for(j in chans2) { cmb[z0++] = seq(chans1[i],chans2[j]) }}
	for(i=0;i<3;i++) { cmb=shuffseq(cmb) }

	for(n=0;n<495;n++) {
		pm1 = p4[n%24]
		scl = new scale(join(seqi(ch[n%4],pm1)," "),0,8)

		base=seq(0,1,2,4,8)
		t=[];
		for(i=0;i<5;i++) { t[i]=s[(n+base[i])%495] }

		p3 =[]
		z0=0
		for(i=0;i<8;i++) { p3[z0++]=saddk(seq(t[0][i],t[2][i],t[4][i]),16) }
		phd = mp(scl.gen(p3,16),fs[(n+2)%64],128)

		t2=[]
		for(i=0;i<5;i++) {
			t2[base[i]]=[]; 
			for(j=i+1;j<5;j++) { 
				t2[base[i]][base[j]] = sadds(t[i],t[j]) 
			}
		}
		
		s1 = saddk(mergeseq(1, t2[0][1], t2[4][8], t2[1][2], t2[0][8]),16) # len 32
		ph1 = repeat(scl.gen(s1,1),4)
		ph1.chan = cmb[n%16][1]
		ph1=mp(ph1, fs[n%64],128)

		z0=0
		s21=[]
		s22=[]
		for(i=0;i<8;i++) {
		 s21[z0]=saddk(distinct(seq(t2[0][2][i],t2[1][4][i],t2[2][8][i])),16)
		 s22[z0++]=saddk(distinct(seq(t2[2][4][i],t2[1][8][i],t2[0][4][i])),16)
		}

		s2 = mergeseq(1,s21,s22)
		ph2=scl.gen(s2,8)
		ph2.chan = cmb[n%16][0]
		ph2 = mp(ph2, fs[(n+1)%64], 128)

		phn = phd|ph1|ph2
		phn.length =128*Td
		phn=quantize2(dedup(phn),24)
		

		writemf(phn, "d:/Music making/Projects/Sleep tapes/Sleep tape 2/mid/"+string(n)+".mid")
	}
}



function sleeptape2_assemble() {
	o =''

	for(i=0;i<495;i++) {
		o+=readmf("d:/Music making/Projects/Sleep tapes/sleep tape 2/mid/"+string(i)+".mid")
		o.length = (i+1)*128*Td
	}
	
	writemf(bpm2(27)|transpose(o,2),"d:/Music making/Projects/Sleep tapes/Sleep tape 2/sleep tape 2.mid")
}


function sleeptape3_gen() {
	len=506
	offset=447
	z0=0
	fs = []
	f1s=seq(0.5,1.0,0.5,1.0)
	f2s=seq(1.0, 2.0,4.0,8.0)
	coeffs=seq(0.03125, 0.0625, 0.125, 0.25)
	
	for(f1 in f1s) {
		for(f2 in f2s) {
			for(coeff in coeffs) {
				fs[z0++] = "Y=(triangle_wform(0.5*T))+" + string(coeffs[coeff]) + "*triangle_wform(T*" + string(f1s[f1]) + ")" +"*triangle_wform(T*" + string(f2s[f2]) + ")" 
			}
		}
	}

	for(i=0;i<4;i++) { fs = shuffseq(fs) }

	fsample = open("d:/Music making/Projects/Sleep tapes/sleep tape 3/subset506.csv")
	z0=0
	s=[]
	for ( n=1; (v=get(fsample)) != Eof; n++ ) {
		s[z0++] = string_to_intseq(v)
	}
		
	close(fsample)
	
	ch = []
	ch[0] = seq("04-37.04", "04-27.05", "04-16.04", "04-09.09")
	ch[1] = seq("04-24.00", "04-28.02","04-27.07","04-27.02")
	ch[2] = seq("04-43.10","04-28.02","04-36.02","04-19.02")
	ch[3] = seq("04-37.09","04-37.02", "04-24.10","04-16.09")
	
	p4 = gen_permu(4)
	for(i=0;i<4;i++) p4=shuffseq(p4)
	cmb = []
	z0=0
	chans1=seq(2,3,4,5)
	chans2=seq(6,7,8,9)
	for(i in chans1) { for(j in chans2) { cmb[z0++] = seq(chans1[i],chans2[j]) }}
	for(i=0;i<3;i++) { cmb=shuffseq(cmb) }

	for(n=offset;n<len;n++) {
		pm1 = p4[n%24]
		scl = new scale(join(seqi(ch[n%4],pm1)," "),0,8)

		base=seq(0,1,2,4,8)
		t=[];
		for(i=0;i<5;i++) { t[i]=s[(n+base[i])%len] }

		p3 =[]
		z0=0
		for(i=0;i<8;i++) { p3[z0++]=saddk(seq(t[0][i],t[2][i],t[4][i]),12) }
		phd = mp(scl.gen(p3,16),fs[(n+2)%64],128)

		t2=[]
		for(i=0;i<5;i++) {
			t2[base[i]]=[]; 
			for(j=i+1;j<5;j++) { 
				t2[base[i]][base[j]] = sadds(t[i],t[j]) 
			}
		}
		
		s1 = saddk(mergeseq(1, t2[0][1], t2[4][8], t2[1][2], t2[0][8]),12) # len 32
		ph1 = repeat(scl.gen(s1,1),4)
		ph1.chan = cmb[n%16][1]
		ph1=mp(ph1, fs[n%64],128)

		z0=0
		s21=[]
		s22=[]
		for(i=0;i<8;i++) {
		 s21[z0]=saddk(distinct(seq(t2[0][2][i],t2[1][4][i],t2[2][8][i])),12)
		 s22[z0++]=saddk(distinct(seq(t2[2][4][i],t2[1][8][i],t2[0][4][i])),12)
		}

		s2 = mergeseq(1,s21,s22)
		ph2=scl.gen(s2,8)
		ph2.chan = cmb[n%16][0]
		ph2 = mp(ph2, fs[(n+1)%64], 128)

		phn = phd|ph1|ph2
		phn.length =128*Td
		phn=quantize2(dedup(phn),24)
		

		writemf(phn, "d:/Music making/Projects/Sleep tapes/Sleep tape 3/mid/"+string(n)+".mid")
	}
}



function sleeptape3_assemble() {
	o =''

	for(i=0;i<506;i++) {
		o+=readmf("d:/Music making/Projects/Sleep tapes/sleep tape 3/mid/"+string(i)+".mid")
		o.length = (i+1)*128*Td
	}
	
	writemf(bpm2(27)|o,"d:/Music making/Projects/Sleep tapes/Sleep tape 3/sleep tape 3.mid")
}